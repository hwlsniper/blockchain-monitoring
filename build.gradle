group 'org.blockchain_monitoring'
version '1.1-SNAPSHOT'

buildscript {
    repositories {
        maven {
            url "${nexusUrl}/content/groups/public/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
def springVersion = "4.3.7.RELEASE"

repositories {
    maven {
        url "${nexusUrl}/content/groups/public/"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-beans:${springVersion}"
    compile "org.springframework:spring-aspects:${springVersion}"
    compile "org.springframework:spring-messaging:${springVersion}"
    compile "org.springframework:spring-websocket:${springVersion}"
    compile "org.influxdb:influxdb-java:2.5"
    compile "commons-logging:commons-logging:1.2"
    compile ("org.blockchain_monitoring:blockchain-monitoring-api:1.1-SNAPSHOT") { changing = true }
    compile ("org.blockchain_monitoring:fly-client-spring:1.4-1.0.0-alpha2") { changing = true }
}


configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'docker'

jar {
    baseName = 'blockchain-monitoring'
    version =  '1.0.0'
}

springBoot {
    mainClass = "org.blockchain_monitoring.Application"
}

docker {
    baseImage = 'java:8'
}

task buildDocker(type: Docker, dependsOn: build) {
    exposePort 8080
    addFile jar.archivePath, jar.archiveName
    entryPoint(["java", "-jar", jar.archiveName])
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusUrl}/content/repositories/releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusUrl}/content/repositories/snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}

